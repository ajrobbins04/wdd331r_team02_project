@use 'sass:list';
/* original colors added back just so the 
program doesn't break from missing color 
variables while refactoring the rest of the code */
$color-primary: #161C41 !default;      // dark blue
$color-primary-alt: #562052 !default;  // dark purple
$color-secondary: #EF2D56 !default;    // red
$color-background: #16C8E3 !default;   // sky blue

$darkBlue: #122A4E !default;      
$darkPurple: #552C85 !default;  
$pink:  #DA40D3 !default;    
$butterYellow: #FFE5B9;
$skyBlue: #16C8E3 !default; 
$brightYellow: #FFD542; 
$white:#ffff;
$transparentPurple: #562c8591;


$bg-gradient: $darkBlue, $darkPurple, $pink, $butterYellow;
// $color-background: linear-gradient(to bottom, #122A4E, #552C85, #DA40D3, #FFE5B9);
// body {
//   background-image:linear-gradient(to bottom, #122A4E, #552C85, #DA40D3, #FFE5B9);
// }

@mixin background($bg) {
  @if list.length($bg) == 1{
    background-color: $bg;
  } @else {
    background-image:linear-gradient(to bottom, $bg) ;
  }
}


$main-colors: (
  primary: $color-primary,
  primary-alt: $color-primary-alt,
  secondary: $color-secondary,
) !default;

// create a color that maps to $color-body
$color-body: scale-color(
  $color-primary,
  $lightness: -30%, /* darken primary color */
  $saturation: -50% /* reduce primary color's saturation */
) !default;

// creates color mapping to $color-gray by mixing a given
// color (gray for now) with $color-body at a 70% ratio
$color-gray: mix(#767676, $color-body, 70%) !default;
$link-color: color(primary) !default;

// additional-colors map to merge with brand-colors
$additional-colors: (
    background: $color-background,
    text: $color-body,
    light: #fff,
);

// place primary and secondary colors in a map
$main-colors: (
  primary: $color-primary,
  primary-alt: $color-primary-alt,
  secondary: $color-secondary,
) !default;

// create a color that maps to $color-body
$color-body: scale-color(
  $color-primary,
  $lightness: -30%, /* darken primary color */
  $saturation: -50% /* reduce primary color's saturation */
) !default;
// creates color mapping to $color-gray by mixing a given
// color (gray for now) with $color-body at a 70% ratio
$color-gray: mix(#767676, $color-body, 70%) !default;
$link-color: color(primary) !default;

// additional-colors map to merge with brand-colors
$additional-colors: (
    background: $color-background,
    text: $color-body,
    light: #fff,
);

$link-color: color(primary) !default;

$colors: map-merge($main-colors,$additional-colors);

@function color($key) {
  @return map-get($colors, $key);
}

@function svgColor($color) {
  @return "%23" + str-slice("#{color($color)}", 2, -1);
}